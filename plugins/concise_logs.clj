(include "../pg_utils.clj")
(require '[plugins.process_crash_relaunch :as PC]) ; TODO: Change it to PCR
(require '[plugins.director_bootup_stage1 :as DBS1])
(require '[plugins.director_bootup_stage2 :as DBS2])
(require '[plugins.director_exit :as DE])
(require '[plugins.edge_bootup :as EB])
(require '[plugins.edge_reconnect :as ERC])
(require '[plugins.ifup :as IFU])
(require '[plugins.topo_load_via_cdb :as TLVCDB])
(require '[plugins.topo-load-via-api :as TLVAPI])


; Take a raw stream and create a PG stream message out of it
(defn pg-stream [& children]
  (fn [e]
    (if (and (check-tags "NRV" (:tags e)) (not= nil (:description e))) ; REVIEW: Do we really need NRV tag ???
      ; "2016-01-04T23:16:43.021Z 127.0.0.1 {2016-01-04T23:16:43.019273+00:00,tahir-ahmed-b-1-bld-master, service_directory_2fa5b111 [10c044ae:1:9]<352:05:17:26.955312>[17]: [init]: rest_gateway is active}
      (let [search-msg (get-substr-after-nth-occurance-of-char (:description e) ", " 1)] ; Get PG log message out of syslog message
        (let [new-event (process-raw-PG-msg e search-msg)]
          (do
            (if (some? (:handler new-event)) (call-rescue new-event children))
            )
          )
        )
      )
    )
  )

(let [index (index)]
  (streams
    (where (not (expired? event))
      (default :ttl 10
        (pg-stream
          (where (re-find #"RPCIF_system_manager.*|service_directory_.*|system_manager_.*|HealthMonitorProcessFailure.*" (:handler event))
            (where (re-find #"\[process_child_exit\]: .*|\[report_process_failure\]:.*|activate_service: .*|EVENT.*|\[service_has_recovered\].*|process_death.*" (:pgmsg event))
              (PC/process_crash_relaunch)
              )
            )
          (where (re-find #"service_directory_.*|RPCIF_service_directory.*|ServiceDirectory.*" (:handler event))
            (where (re-find #"\[init\]:.*|\[operator\(\)\]:.*|EVENT.*|init:.*" (:pgmsg event))
              (DBS2/director_bootup_stage2)
              )
            )
          (where (re-find #"SMLite_.*" (:handler event))
            (DBS1/director_bootup_stage1)
            (where (re-find #"\[child_exit_monitor\]: .*" (:pgmsg event))
              (DE/director_exit)
              )
            )
          (where (re-find #"SELite_.*" (:handler event))
            (where (re-find #"\[SELite\]: .*|\[nos_monitor\]: .*|\[launch_sem\]: .*|\[rx_sm_msg_handler\]: .*" (:pgmsg event))
              (EB/edge_bootup)
              )
            (where (re-find #"\[nos_monitor\]: .*|\[handle_nos_reconnect\]: .*|\[child_exit_monitor\]: .*|\[launch_sem\]: .*|\[rx_sm_msg_handler\]: .*" (:pgmsg event))
              (ERC/edge_reconnect)
              )
            )
          (where (re-find #"RPCIF_.*|PE_.*|pem_helper_*" (:handler event))
            (where (re-find #"EVENT .*|dp_pgname.*|ifup_internal: .*|ifup_latency: .*|dp_pgname .*|\[notify_ifup_internal\].*|notify_ifup_internal_fpool.*|print_ifc_event.*" (:pgmsg event))
              (IFU/ifup)
              )
            )
          (where (re-find #"RPCIF_.*|ConnectivityManager.*|cdb_.*" (:handler event))
            (where (re-find #"EVENT .*|Requesting cdb.*|Dom0::.*|request_config_post.*" (:pgmsg event))
              (TLVCDB/topo_load_via_cdb)
              )
            )
;          (where (re-find #"rest_gateway_.*|ConnectivityManager.*|rest_gateway_.*" (:handler event))
;            (where (re-find #"PUT .*|Topology.*|Dom0::.*|requested.*|GatewayRequest.*" (:pgmsg event))
;              (TLVAPI/topo-load-via-api)
;              )
;            )
          )
        )
      )
    (expired
      #(prn "******* Expired1> ******** " %)
      (where (re-find #"process_crash_relaunch" (:plugin_type event))
        (PC/process_crash_relaunch_expired)
        )
      (where (re-find #"director_bootup_stage1" (:plugin_type event))
        (DBS1/director_bootup_stage1_expired)
        )
      (where (re-find #"director_bootup_stage2" (:plugin_type event))
        (DBS2/director_bootup_stage2_expired)
        )
      (where (re-find #"edge_bootup" (:plugin_type event))
        (EB/edge_bootup_expired)
        )
      (where (re-find #"edge_reconnect" (:plugin_type event))
        (ERC/edge_reconnect_expired)
        )
      (where (re-find #"ifup" (:plugin_type event))
        (IFU/ifup_expired)
        )
      (where (re-find #"topo_load_via_cdb" (:plugin_type event))
        (TLVCDB/topo_load_via_cdb_expired)
        )
      )
    )
  )
